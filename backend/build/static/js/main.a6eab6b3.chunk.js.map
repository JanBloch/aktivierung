{"version":3,"sources":["components/pages/HomePage.jsx","components/pages/RefusedPage.jsx","components/socket.js","components/pages/GamePage.jsx","components/pages/WonPage.jsx","components/pages/LostPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["HomePage","socket","setPage","admin","startCallback","Card","CardContent","Button","size","color","variant","onClick","CircularProgress","RefusedPage","io","GamePage","useState","data","setData","waiting","setWaiting","fixUmlauts","value","atob","on","req","answer","index","emit","question","replace","style","marginRight","answers","WonPage","LostPage","place","App","page","setAdmin","setPlace","removeAllListeners","useEffect","console","log","Grid","container","spacing","direction","alignItems","justify","textAlign","minHeight","class","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a6eab6b3.chunk.js","sourcesContent":["import react, { useState } from \"react\";\nimport { Card, CardContent, TextField, Button, CircularProgress } from \"@material-ui/core\";\n\n\nconst HomePage = ({ socket, setPage, admin, startCallback }) => {\n    return (\n        <>\n            <Card>\n                <CardContent>\n                    <h1>Quiz Battle Royal</h1>\n                    {admin ? <>\n                    <Button size=\"large\" color=\"primary\" variant=\"contained\" onClick={startCallback}>Start Game</Button>\n                    </> : <>\n                        <CircularProgress></CircularProgress>\n                        <p>Waiting for the host to start the game...</p>\n                    </>\n                    }\n                </CardContent>\n            </Card>\n        </>);\n}\n\nexport default HomePage;\n","import react, { useState } from \"react\";\nimport { Card, CardContent, TextField, Button, CircularProgress } from \"@material-ui/core\";\n\n\nconst RefusedPage = ({ socket, setPage }) => {\n    return (\n        <>\n            <Card>\n                <CardContent>\n                    <h1>Quiz Battle Royal</h1>\n                    <p>Your connection has been refused!<br></br>There's either a game running and/or you have been disqualified!</p>\n                </CardContent>\n            </Card>\n        </>);\n}\n\nexport default RefusedPage;\n","import io from \"socket.io-client\";\n\nconst socket = io();\nexport default socket;","import react, { useState } from \"react\";\nimport { Card, CardContent, TextField, Button, CircularProgress, Grid } from \"@material-ui/core\";\nimport socket from \"../socket\";\n\nconst GamePage = () => {\n    const [timer, setTimer] = useState(null);\n    const [data, setData] = useState(null);\n    const [waiting, setWaiting] = useState(true);\n    const [seconds, setSeconds] = useState(0);\n    const time = 20;\n    socket.on(\"question\", (req) => {\n        setData(req);\n        setWaiting(false);\n    });\n\n    function fixUmlauts(value) {\n        return atob(value);\n    }\n    const answer = (index) => {\n        socket.emit(\"answer\", index);\n        setWaiting(true);\n    }\n\n    return (\n        <>\n            <Card>\n                <CardContent>\n                    {\n                        waiting ?\n                            <>\n                                <CircularProgress />\n                                <p>Waiting for question...</p>\n                            </>\n                            :\n                            <>\n                                <h1>{fixUmlauts(data.question).replace(\"%3F\", \"?\")}</h1>\n                                <Button size=\"large\" variant=\"outlined\" onClick={() => { answer(0) }} style={{ marginRight: 14 }}>{fixUmlauts(data.answers[0])}</Button>\n                                <Button size=\"large\" variant=\"outlined\" onClick={() => { answer(1) }} style={{ marginRight: 14 }}>{fixUmlauts(data.answers[1])}</Button>\n                                <Button size=\"large\" variant=\"outlined\" onClick={() => { answer(2) }} style={{ marginRight: 14 }}>{fixUmlauts(data.answers[2])}</Button>\n                                <Button size=\"large\" variant=\"outlined\" onClick={() => { answer(3) }}>{fixUmlauts(data.answers[3])}</Button>\n                            </>\n\n                    }\n                </CardContent>\n            </Card>\n        </>);\n}\n\nexport default GamePage;\n","import react, { useState } from \"react\";\nimport { Card, CardContent, TextField, Button, CircularProgress } from \"@material-ui/core\";\n\n\nconst WonPage = ({ socket, setPage }) => {\n    return (\n        <>\n            <Card>\n                <CardContent>\n                    <h1>You won!</h1>\n                    <p>You are the winner!</p>\n                </CardContent>\n            </Card>\n        </>);\n}\n\nexport default WonPage;\n","import react, { useState } from \"react\";\nimport { Card, CardContent, TextField, Button, CircularProgress } from \"@material-ui/core\";\n\n\nconst LostPage = ({ socket, setPage, place }) => {\n    return (\n        <>\n            <Card>\n                <CardContent>\n                    <h1>You lost!</h1>\n                    <h4>You got in {place}. place</h4>\n                </CardContent>\n            </Card>\n        </>);\n}\n\nexport default LostPage;\n","import './App.css';\nimport HomePage from './components/pages/HomePage';\nimport { Grid } from \"@material-ui/core\";\nimport { useState, useEffect } from 'react';\nimport ErrorPage from './components/pages/ErrorPage';\nimport RefusedPage from './components/pages/RefusedPage';\nimport GamePage from \"./components/pages/GamePage\";\nimport WonPage from './components/pages/WonPage';\nimport LostPage from './components/pages/LostPage';\nimport socket from \"./components/socket\"\nfunction App() {\n    const [page, setPage] = useState(\"home\");\n    const [admin, setAdmin] = useState(false);\n    const [place, setPlace] = useState(0);\n    socket.on(\"refused\", () => {\n        setPage(\"refused\");\n    });\n    socket.on(\"admin\", () => {\n        setAdmin(true);\n    });\n    socket.on(\"start\", () => {\n        setPage(\"game\")\n    });\n    socket.on(\"wrong\", (req) => {\n        setPlace(req);\n        setPage(\"lost\");\n    });\n    socket.on(\"won\", () => {\n        setPage(\"won\");\n    });\n    socket.on('disconnect', () => {\n        socket.removeAllListeners();\n    });\n    const startCallback = () => {\n        socket.emit(\"start\");\n    }\n    useEffect(() => {\n        console.log(page);\n    }, [page])\n\n\n    return (\n        <Grid container\n            spacing={0}\n            direction=\"column\"\n            alignItems=\"center\"\n            justify=\"center\" style={{ textAlign: \"center\", minHeight: '100vh' }}>\n            <Grid>\n                {page == \"home\" ? <HomePage admin={admin} startCallback={startCallback} /> : null}\n                {page == \"refused\" ? <RefusedPage /> : null}\n                {page == \"game\" ? <GamePage socket={socket} /> : null}\n                {page == \"won\" ? <WonPage /> : null}\n                {page == \"lost\" ? <LostPage place={place} /> : null}\n                <div class=\"copy\">\n                    <p>Quiz Battle Royal &copy; 2021 Ruben Kober</p>\n                </div>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}